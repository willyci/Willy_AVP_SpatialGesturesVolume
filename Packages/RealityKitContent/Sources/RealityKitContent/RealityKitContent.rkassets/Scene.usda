#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Sphere", "GridMaterial"]
    rel material:binding = None (
        bindMaterialAs = "weakerThanDescendants"
    )

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["Collider", "InputTarget", "RealityKitContent_GestureComponent", "skull"]
        rel material:binding = </Root/GridMaterial/GridMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 1.829695
                token shapeType = "Sphere"
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitCustomComponent "RealityKitContent_GestureComponent"
        {
            uniform token info:id = "RealityKitContent.GestureComponent"
            bool pivotOnDrag = 0
            bool preserveOrientationOnPivotDrag = 0
        }

        def "skull" (
            active = true
            references = @skull.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.5, 0.5, 0.5)
            float3 xformOp:translate = (0.016070114, -1.6221623, 0.04472955)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitCustomComponent "RealityKitContent_GestureComponent"
            {
                uniform token info:id = "RealityKitContent.GestureComponent"
                bool pivotOnDrag = 0
                bool preserveOrientationOnPivotDrag = 0
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (5.22721, 7.31878, 6.13646)
                    float radius = 0.1
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                        float3 position = (-0.57369494, 3.6584902, -1.69121)
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            over "Materials"
            {
                over "Dflt0"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }

                over "Dflt1"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }

                over "Dflt2"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }

                over "Dflt3"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }
        }
    }

    def "GridMaterial" (
        active = true
        references = @Materials/GridMaterial.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

